Javascript Execution Context
{}=>Global Execution Context - this
1. Global Execution Context
2. Function Execution Context
3. Eval Execution Context

{}  -Memory Creation Phase/Creation Phase (space allocated)
    -Execution Phase

let val1=10
let val2=5
function addNum(num1,num2){
    let total=num1+num2
    return total
}
let result1=addNum(val1,val2)
let result2=addNum(10,2)

1. Global Execution- this
2. Memory Phase- 
    val1->undef
    val2->undef
    addNum->definition
    result1->undef
    result2->undef
3. Execution Phase-
    val1=10
    val2=5
    (defn of fn already sent)
    addNum=>[New variable env+Execution thread] set up
                1. Memory Phase
                    val1->undef
                    val2->undef
                    total->undef
                2. Execution Context
                    num1=10
                    num2=5
                    total=15 (sent to Global Execution)
            [New Execution Context] deleted

    addNum=>[NVE+thread]
                1. Memory Phase
                2. Execution Phase

LIFO- last in first out

function one(){
    console.log("one")
    two()
}
function two(){
    console.log("two")
    three()
}
function three(){
    console.log("three")
}

one()
two()
three()